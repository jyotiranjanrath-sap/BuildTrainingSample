"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddIgnoreProblemCodeAction = void 0;
class AddIgnoreProblemCodeAction {
    constructor(commandId) {
        this._commandId = commandId;
    }
    provideCodeActions(document, range, context) {
        let that = this;
        if (context.diagnostics.length <= 0) {
            return Promise.resolve([]);
        }
        let diagnostic, code;
        for (let index = 0; index < context.diagnostics.length; index++) {
            code = context.diagnostics[index].code;
            if (code && ["ControlNotFound", "PageNotFound", "I18nKeyNotFound"].includes(code)) {
                diagnostic = context.diagnostics[index];
                break;
            }
        }
        if (!diagnostic) {
            return Promise.resolve([]);
        }
        let ignoreContent = document.getText(diagnostic.range);
        if (!ignoreContent) {
            return Promise.resolve([]);
        }
        if (!ignoreContent || ignoreContent.length === 0) {
            return Promise.resolve([]);
        }
        let title = "MDK: Ignore this error";
        return Promise.resolve([{
                title: title,
                command: that._commandId,
                arguments: [ignoreContent, code]
            }]);
    }
}
exports.AddIgnoreProblemCodeAction = AddIgnoreProblemCodeAction;
//# sourceMappingURL=AddIgnoreProblemCodeAction.js.map