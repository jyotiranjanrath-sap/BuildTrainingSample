"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppDataSegment = void 0;
const ErrorMessage_1 = require("../../../common/ErrorMessage");
const Context_1 = require("../Context");
const ISegment_1 = require("./ISegment");
/**
 * Represents a client data segment. A client data segment must start with #ClientData.
 */
class AppDataSegment extends ISegment_1.ISegment {
    /**
     * Tries to resolve the segment string in the provided context.
     * @returns {IContext} A context around the client data object
     * If the process fails, the previously set error handler will be called. Always not undefined.
     */
    resolve() {
        return __awaiter(this, void 0, void 0, function* () {
            this.validateContext();
            if (this.context && this.context.clientData) {
                return new Context_1.Context({
                    UserId: "",
                    DeviceId: "",
                    MobileServiceEndpoint: "",
                    MobileServiceAppId: "",
                    AvailableThemes: "",
                    AppName: ""
                });
            }
            return new Context_1.Context({ actionResults: {} });
        });
    }
    isSpecifierRequired() {
        return false;
    }
    validateContext() {
        if (this.context && this.context.clientData) {
            return;
        }
        throw new Error(ErrorMessage_1.ErrorMessage.NOT_GET_APPDATA_FOR_CONTEXT);
    }
}
exports.AppDataSegment = AppDataSegment;
//# sourceMappingURL=AppDataSegment.js.map