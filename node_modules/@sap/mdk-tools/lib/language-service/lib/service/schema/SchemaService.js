"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.MDKSchemaService = void 0;
const path = require("path");
const LanguageHelper_1 = require("../../common/LanguageHelper");
const PathUtil_1 = require("../../common/PathUtil");
let JSONSchemaService = require('vscode-json-languageservice/lib/umd/services/jsonSchemaService.js').JSONSchemaService;
class MDKSchemaService extends JSONSchemaService {
    constructor(requestService, contextService, promiseConstructor) {
        super(requestService, contextService, promiseConstructor);
    }
    getOrAddSchemaHandle(id, unresolvedSchemaContent) {
        return this.addSchemaHandle(id, unresolvedSchemaContent);
    }
    getSchemaForResource(resource, document) {
        let schemaName = PathUtil_1.PathUtil.getSchemaNameByMDKFile(resource);
        if (schemaName) {
            let rootPath = LanguageHelper_1.LanguageHelper.getSchemaRootPath();
            return this.getOrAddSchemaHandle(path.join(rootPath, schemaName)).getResolvedSchema();
        }
        return this.promise.resolve(null);
    }
}
exports.MDKSchemaService = MDKSchemaService;
//# sourceMappingURL=SchemaService.js.map